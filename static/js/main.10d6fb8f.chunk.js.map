{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.module.css","components/Navigation/Drawer/Drawer.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","Drawer","map","link","index","key","this","close","Fragment","renderLinks","onClose","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","question","answerNumber","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.10d6fb8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__OLoE2\",\"open\":\"MenuToggle_open__14SWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2BlOY\",\"close\":\"Drawer_close__1Cl1X\",\"active\":\"Drawer_active__35KPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__18Rwf\",\"QuizWrapper\":\"Quiz_QuizWrapper__c8INT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3PJVi\",\"success\":\"AnswerItem_success__30eEE\",\"error\":\"AnswerItem_error___hrWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"error\":\"FinishedQuiz_error__KSdom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"success\":\"Button_success__cnhtV\",\"error\":\"Button_error__2nDvg\",\"primary\":\"Button_primary__28VL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__EwYQd\"};","import React from \"react\";\nimport classes from \"./MenuToggle.module.css\";\n\nconst MenuToggle = props => {\n  const cls = [\n    classes.MenuToggle,\n    'fa'\n  ]\n\n  if (props.isOpen) {\n    cls.push('fa-times');\n    cls.push(classes.open)\n  } else {\n    cls.push('fa-bars');\n  }\n\n  return (\n    <i\n      className={cls.join(' ')}\n      onClick={props.onToggle}\n    >\n\n    </i>\n  )\n}\n\nexport default MenuToggle;","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}></div>\n\nexport default Backdrop;","import React, { Component } from \"react\";\nimport classes from './Drawer.module.css';\nimport Backdrop, { } from \"../../UI/Backdrop/Backdrop\";\n\nconst links = [\n  1, 2, 3\n]\n\nclass Drawer extends Component {\n  renderLinks() {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <a>Link {link}</a>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    const cls = [classes.Drawer]\n    if (!this.props.isOpen) {\n      cls.push(classes.close)\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {this.renderLinks()}\n          </ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Drawer;\n","import React, { Component } from \"react\";\nimport classes from \"./Layout.module.css\"\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\"\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\"\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    })\n  }\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.menuCloseHandler}\n        />\n\n        <MenuToggle\n          onToggle={this.toggleMenuHandler}\n          isOpen={this.state.menu}\n        />\n        <main>\n          {this.props.children}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport classes from './AnswerItem.module.css';\n\nconst AnswerItem = props => {\n  const cls = [classes.AnswerItem]\n\n  if (props.state) {\n    cls.push(classes[props.state])\n  }\n\n  return (\n    <li\n      className={cls.join(' ')}\n      onClick={() => props.onAnswerClick(props.answer.id)}\n    >\n      {props.answer.text}\n    </li>\n  )\n}\n\nexport default AnswerItem;","import React from 'react';\nimport classes from './AnswersList.module.css';\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => (\n  <ul className={classes.AnswersList}>\n    {props.answers.map((answer, index) => {\n      return (\n        <AnswerItem\n          key={index}\n          answer={answer}\n          onAnswerClick={props.onAnswerClick}\n          state={props.state ? props.state[answer.id] : null}\n        />\n      )\n    })}\n  </ul>\n)\n\nexport default AnswersList;","import React from 'react';\nimport classes from './ActiveQuiz.module.css';\nimport AnswersList from './AnswersList/AnswersList';\n\nconst ActiveQuiz = props => (\n  <div className={classes.ActiveQuiz}>\n    <p className={classes.Question}>\n      <span>\n        <strong>2.</strong>&nbsp;\n        {props.question}\n      </span>\n      <small>{props.answerNumber} of {props.quizLength}</small>\n    </p>\n\n    <AnswersList\n      state={props.state}\n      answers={props.answers}\n      onAnswerClick={props.onAnswerClick}\n    />\n  </div>\n)\n\nexport default ActiveQuiz","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = props => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ]\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;","import React from 'react';\nimport classes from './FinishedQuiz.module.css';\nimport Button from \"../UI/Button/Button\";\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++;\n    }\n    return total;\n  }, 0);\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {props.quiz.map((quizItem, index) => {\n          const cls = [\n            'fa',\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n            classes[props.results[quizItem.id]]\n          ]\n\n          return (\n            <li\n              key={index}\n            >\n              <strong>{index + 1}</strong>.&nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')}></i>\n            </li>\n          )\n        })}\n      </ul>\n\n      <p>\n        Right {successCount} of {props.quiz.length}\n      </p>\n\n      <div>\n        <Button onClick={props.onRetry} type=\"primary\">Repeat</Button>\n        <Button type=\"success\">Go on list of tests</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz;","import React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\n\nclass Quiz extends Component {\n  state = {\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: [\n      {\n        question: 'Which color the sky is?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [\n          { text: 'Black', id: 1 },\n          { text: 'Blue', id: 2 },\n          { text: 'Red', id: 3 },\n          { text: 'Green', id: 4 }\n        ]\n      },\n      {\n        question: 'On which year SP was based on?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [\n          { text: '1700', id: 1 },\n          { text: '1702', id: 2 },\n          { text: '1703', id: 3 },\n          { text: '1803', id: 4 }\n        ]\n      }\n    ]\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0];\n\n      if (this.state.answerState[key] === 'success') {\n        return;\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion];\n    const results = this.state.results;\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success';\n      }\n\n\n      this.setState({\n        answerState: { [answerId]: 'success' },\n        results\n      });\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n\n        window.clearTimeout(timeout)\n      }, 200)\n    } else {\n      results[question.id] = 'error'\n      this.setState({\n        answerState: { [answerId]: 'error' },\n        results\n      });\n    }\n  }\n\n  isQuizFinished = () => {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  retryHandler = ()=> {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Answer on all questions</h1>\n          {\n            this.state.isFinished ?\n              <FinishedQuiz\n                results={this.state.results}\n                quiz={this.state.quiz}\n                onRetry={this.retryHandler}\n              />\n              :\n              <ActiveQuiz\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                question={this.state.quiz[this.state.activeQuestion].question}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz;","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz'\n\nfunction App() {\n  return (\n    <Layout>\n      <Quiz />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}